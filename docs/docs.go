// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/signup": {
            "post": {
                "description": "Sends an OTP code to the phoneNumber (fake OTP, just printed in the console)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Signup Method",
                "parameters": [
                    {
                        "description": "AuthSignupRequest model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Request body is not valid",
                        "schema": {
                            "$ref": "#/definitions/controllers_swagger.AuthSignupBadResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup/confirm-otp": {
            "post": {
                "description": "Validate the PhoneNumber with the OtpCode alongside withit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Signup Confirm Otp Method",
                "parameters": [
                    {
                        "description": "AuthSignupConfirmOtpRequest model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthSignupConfirmOtpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Request body is not valid",
                        "schema": {
                            "$ref": "#/definitions/controllers_swagger.AuthSignupConfirmOtpBadResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers_swagger.AuthSignupBadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "string"
                },
                "succeed": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "controllers_swagger.AuthSignupConfirmOtpBadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "string"
                },
                "succeed": {
                    "type": "boolean",
                    "example": false
                },
                "token": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dtos.AuthSignupConfirmOtpRequest": {
            "type": "object",
            "required": [
                "phoneNumber"
            ],
            "properties": {
                "otpCode": {
                    "type": "string",
                    "example": "1234"
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11,
                    "example": "09123456789"
                }
            }
        },
        "dtos.AuthSignupRequest": {
            "type": "object",
            "required": [
                "phoneNumber"
            ],
            "properties": {
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11,
                    "example": "09123456789"
                }
            }
        },
        "dtos.AuthSignupResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "string"
                },
                "succeed": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "dtos.AuthTokenResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Succeed"
                },
                "succeed": {
                    "type": "boolean",
                    "example": true
                },
                "token": {
                    "type": "string",
                    "example": "the token will be here"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
